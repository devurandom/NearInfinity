<?xml version="1.0" encoding="UTF-8"?>
<project name="NearInfinity" default="compile">


    <!-- set global properties for this build -->
    <property name="package" value="NearInfinity"/>
    <property name="version" value="0"/>

    <property name="target_java_version" value="1.5"/>
    <property name="source_java_version" value="1.5"/>

    <property name="src" location="src"/>
    <property name="build" location="build"/>

    <property name="dist.prefix" value="${package}-bin-${version}"/>
    <property name="srcdist.prefix" value="${package}-src-${version}"/>

    <property name="dist" location="${dist.prefix}"/>
    <property name="srcdist" location="${srcdist.prefix}"/>


    <fileset id="versionedfiles" dir="${src}">
        <include name="infinity/NearInfinity.java"/>
    </fileset>

    <fileset id="distfiles" dir="${src}">
        <exclude name="**/*.java"/>
    </fileset>


    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <mkdir dir="${build}"/>
    </target>


    <target name="version" description="dump the version into the sourcecode">
        <exec executable="git"
            output="${build}/revision"
            outputproperty="revision"
            errorproperty="revision.error"
            failifexecutionfails="false">
            <arg value="rev-parse"/>
            <arg value="HEAD"/>
        </exec>
        <replaceregexp
            match="revisionString = &quot;.*&quot;"
            replace="revisionString = &quot;${revision}&quot;">
            <fileset refid="versionedfiles"/>
        </replaceregexp>
        <replaceregexp
            match="versionString = &quot;.*&quot;"
            replace="versionString = &quot;${version}&quot;">
            <fileset refid="versionedfiles"/>
        </replaceregexp>
        <replaceregexp
            match="@version [^ ]*"
            replace="@version ${version}">
            <fileset refid="versionedfiles"/>
        </replaceregexp>
    </target>


    <target name="compile" depends="init, version" description="compile the source">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac
            srcdir="${src}"
            destdir="${build}"
            source="${source_java_version}"
            target="${target_java_version}"
            includeantruntime="false">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </javac>
    </target>


    <target name="dist" depends="compile" description="generate the distribution">
        <!-- Put everything in ${build} into the ${package}-${DSTAMP}.jar file -->
        <mkdir dir="${dist}"/>
        <copy todir="${dist}">
            <fileset dir="${build}"/>
            <fileset refid="distfiles"/>
        </copy>
        <jar
            jarfile="${package}-${DSTAMP}.jar"
            basedir="${dist}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="infinity.NearInfinity"/>
            </manifest>
        </jar>
    </target>


    <target name="srcdist" depends="init, version" description="generate the source package">
        <mkdir dir="${srcdist}"/>
        <copy todir="${srcdist}/src">
            <fileset dir="${src}"/>
        </copy>
        <copy todir="${srcdist}">
            <fileset dir="${build}">
                <include name="revision"/>
            </fileset>
            <fileset dir=".">
                <include name="License.txt"/>
                <include name="build.xml"/>
            </fileset>
        </copy>
        <zip destfile="${package}-${DSTAMP}.zip" level="9">
            <zipfileset dir="${srcdist}" prefix="${package}-${DSTAMP}"/>
        </zip>
    </target>


    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${srcdist}"/>
    </target>
</project>
